knitr::opts_chunk$set(echo = TRUE)
library(GA)
fxy <- function(x, y)
{
(x - 1)^2 + 100*(y - x^2)^2
}
x <- y <- seq(-10, 10, by = 0.1)
f <- outer(x, y, fxy)
persp3D(x, y, f, col.palette = bl2gr.colors)
GA <- ga(type = "real-valued",
fitness =  function(x) -fxy(x[1], x[2]),
lower = c(-10, -10), upper = c(10, 10),
popSize = 50, maxiter = 5000, run = 100)
summary(GA)
library(GA)
fxy <- function(x, y)
{
(x - 1)^2 + 100*(y - x^2)^2
}
x <- y <- seq(-10, 10, by = 0.1)
f <- outer(x, y, fxy)
persp3D(x, y, f, col.palette = bl2gr.colors)
GA <- ga(type = "real-valued",
fitness =  function(x) -fxy(x[1], x[2]),
lower = c(-10, -10), upper = c(10, 10),
popSize = 100, maxiter = 5000, run = 100)
summary(GA)
library(GA)
fxy <- function(x, y)
{
(x - 1)^2 + 100*(y - x^2)^2
}
x <- y <- seq(-10, 10, by = 0.1)
f <- outer(x, y, fxy)
persp3D(x, y, f, col.palette = bl2gr.colors)
GA <- ga(type = "real-valued",
fitness =  function(x) -fxy(x[1], x[2]),
lower = c(-10, -10), upper = c(10, 10),
popSize = 100, maxiter = 10000, run = 100)
summary(GA)
library(GA)
fxy <- function(x, y)
{
(x - 1)^2 + 100*(y - x^2)^2
}
x <- y <- seq(-10, 10, by = 0.1)
f <- outer(x, y, fxy)
persp3D(x, y, f, col.palette = bl2gr.colors)
GA <- ga(type = "real-valued",
fitness =  function(x) -fxy(x[1], x[2]),
lower = c(-10, -10), upper = c(10, 10),
popSize = 100, maxiter = 20000, run = 100)
summary(GA)
library(GA)
fxy <- function(x, y)
{
(x - 1)^2 + 100*(y - x^2)^2
}
x <- y <- seq(-10, 10, by = 0.1)
f <- outer(x, y, fxy)
persp3D(x, y, f, col.palette = bl2gr.colors)
GA <- ga(type = "real-valued",
fitness =  function(x) -fxy(x[1], x[2]),
lower = c(-10, -10), upper = c(10, 10),
popSize = 100, maxiter = 5000, run = 100)
summary(GA)
library(GA)
fxy <- function(x, y)
{
(x - 1)^2 + 100*(y - x^2)^2
}
x <- y <- seq(-10, 10, by = 0.1)
f <- outer(x, y, fxy)
persp3D(x, y, f, col.palette = bl2gr.colors)
GA <- ga(type = "real-valued",
fitness =  function(x) -fxy(x[1], x[2]),
lower = c(-10, -10), upper = c(10, 10),
popSize = 100, maxiter = 50000, run = 1000)
summary(GA)
library(GA)
fxy <- function(x, y)
{
(x - 1)^2 + 100*(y - x^2)^2
}
x <- y <- seq(-10, 10, by = 0.1)
f <- outer(x, y, fxy)
persp3D(x, y, f, col.palette = bl2gr.colors)
GA <- ga(type = "real-valued",
fitness =  function(x) -fxy(x[1], x[2]),
lower = c(-10, -10), upper = c(10, 10),
popSize = 100, maxiter = 50000, run = 5000)
summary(GA)
library(GA)
fxy <- function(x, y)
{
(x - 1)^2 + 100*(y - x^2)^2
}
x <- y <- seq(-10, 10, by = 0.1)
f <- outer(x, y, fxy)
persp3D(x, y, f, col.palette = bl2gr.colors)
GA <- ga(type = "real-valued",
fitness =  function(x) -fxy(x[1], x[2]),
lower = c(-10, -10), upper = c(10, 10),
popSize = 100, maxiter = 10000, run = 500, seed = 16)
summary(GA)
plot(GA)
fxy(0,0)
fxy(.9985707,.9971421)
fxy(1,1)
library(GA)
fxy <- function(x, y)
{
(x - 1)^2 + 100*(y - x^2)^2
}
x <- y <- seq(-10, 10, by = 0.1)
f <- outer(x, y, fxy)
persp3D(x, y, f, col.palette = bl2gr.colors)
GA <- ga(type = "real-valued",
fitness =  function(x) -fxy(x[1], x[2]),
lower = c(-10, -10), upper = c(10, 10),
popSize = 100, maxiter = 10000, run = 5000, seed = 16)
summary(GA)
plot(GA)
library(optimr)
fxy2 <- function(x, y)
{
(x - 1)^2 + 100*(y - x^2)^2
}
optimr(fxy2, lower=-10, upper=10, method='L-BFGS-B')
library(optimr)
fxy2 <- function(x, y)
{
(x - 1)^2 + 100*(y - x^2)^2
}
optimr(fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B')
fxy2(2,1)
rep(3, 25)
library(optimr)
fxy2 <- function(x, y)
{
(x - 1)^2 + 100*(y - x^2)^2
}
optimr(c(3,3), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B')
library(optimr)
fxy2 <- function(x, y)
{
(x - 1)^2 + 100*(y - x^2)^2
}
optimr(par=c(3,3), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B')
knitr::opts_chunk$set(echo = TRUE)
library(optimr)
fxy2 <- function(par)
{
(par[1] - 1)^2 + 100*(par[2] - par[1]^2)^2
}
optimr(par=c(3,3), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B')
library(optimr)
fxy2 <- function(par)
{
(par[1] - 1)^2 + 100*(par[2] - par[1]^2)^2
}
optimr(par=c(.5,.5), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B')
library(optimr)
fxy2 <- function(par)
{
(par[1] - 1)^2 + 100*(par[2] - par[1]^2)^2
}
optimr( fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B')
library(optimr)
fxy2 <- function(par)
{
(par[1] - 1)^2 + 100*(par[2] - par[1]^2)^2
}
optimr(par=c(.5,.5), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B')
library(optimr)
fxy2 <- function(par)
{
(par[1] - 1)^2 + 100*(par[2] - par[1]^2)^2
}
optimr(par=c(.5,.5), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B', maxit=1000)
library(optimr)
fxy2 <- function(par)
{
(par[1] - 1)^2 + 100*(par[2] - par[1]^2)^2
}
optimr(par=c(.5,.5), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B', control = list(maxit=1000))
library(optimr)
fxy2 <- function(par)
{
(par[1] - 1)^2 + 100*(par[2] - par[1]^2)^2
}
optimr(par=c(.5,.5), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B', control = list(maxit=1000, factr=exp(10)))
library(optimr)
fxy2 <- function(par)
{
(par[1] - 1)^2 + 100*(par[2] - par[1]^2)^2
}
optimr(par=c(.5,.5), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B', control = list(maxit=1000, factr=exp(20)))
library(optimr)
fxy2 <- function(par)
{
(par[1] - 1)^2 + 100*(par[2] - par[1]^2)^2
}
optimr(par=c(.5,.5), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B', control = list(maxit=1000, factr=exp(30)))
library(optimr)
fxy2 <- function(par)
{
(par[1] - 1)^2 + 100*(par[2] - par[1]^2)^2
}
optimr(par=c(.5,.5), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B', control = list(maxit=1000, factr=exp(-10)))
library(optimr)
fxy2 <- function(par)
{
(par[1] - 1)^2 + 100*(par[2] - par[1]^2)^2
}
optimr(par=c(.5,.5), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B', control = list(maxit=1000, factr=exp(-20)))
library(optimr)
fxy2 <- function(par)
{
(par[1] - 1)^2 + 100*(par[2] - par[1]^2)^2
}
optimr(par=c(.5,.5), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B', control = list(maxit=1000, factr=1e-10))
library(optimr)
fxy2 <- function(par)
{
(par[1] - 1)^2 + 100*(par[2] - par[1]^2)^2
}
optimr(par=c(.5,.5), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B', control = list(maxit=1000, factr=1e-20))
library(optimr)
fxy2 <- function(par)
{
(par[1] - 1)^2 + 100*(par[2] - par[1]^2)^2
}
optimr(par=c(.5,.5), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B', control = list(maxit=1000, factr=1e-30))
library(optimr)
fxy2 <- function(par)
{
(par[1] - 1)^2 + 100*(par[2] - par[1]^2)^2
}
optimr(par=c(.5,.5), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B', control = list(maxit=1000, factr=1e-40))
library(optimr)
fxy2 <- function(par)
{
(par[1] - 1)^2 + 100*(par[2] - par[1]^2)^2
}
optimr(par=c(.5,.5), fxy2, lower=c(-10,-10), upper=c(10,10), method='L-BFGS-B')
library(GA)
fxy <- function(x, y)
{
(x - 1)^2 + 100*(y - x^2)^2
}
x <- y <- seq(-10, 10, by = 0.1)
f <- outer(x, y, fxy)
persp3D(x, y, f, col.palette = bl2gr.colors)
GA <- ga(type = "real-valued",
fitness =  function(x) -fxy(x[1], x[2]),
lower = c(-10, -10), upper = c(10, 10),
popSize = 100, maxiter = 10000, run = 100, seed = 160)
summary(GA)
plot(GA)
